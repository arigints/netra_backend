kubernetesType: Vanilla  #Vanilla for community kubernetes distribution else Openshift for Openshift

## In case of using these charts on Openshift then please use UBI images
## To know more about them follow this tutorial https://gitlab.eurecom.fr/oai/cn5g/oai-cn5g-fed/-/tree/master/openshift
nfimage:   # image name either locally present or in a public/private repository
  repository: quay.tiplab.local/orca/oai-gnb          ## dockerhub oaisoftwarealliance/oai-gnb
  version: 2023.w49 # image tag or develop
  # pullPolicy: IfNotPresent or Never or Always
  pullPolicy: IfNotPresent

## good to use when pulling images from docker-hub mention
imagePullSecrets:
    name: "quay-registry-secret"
    dockerconfigjson: "eyJhdXRocyI6eyJxdWF5LnRpcGxhYi5sb2NhbCI6eyJ1c2VybmFtZSI6InJhZmxpIiwicGFzc3dvcmQiOiJDYXBzdG9uZTIwMjMiLCJhdXRoIjoiY21GbWJHazZRMkZ3YzNSdmJtVXlNREl6In19fQ=="

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


# oai-du helm-charts can be used in RFSimulated mode which does not require multiple interaces. 
# In case you use the charts with a RU/USRP you need a dedicated interface with the RU. 
## Change these ip-addresses according to your environment

multus:
  defaultGateway: ""
  f1Interface:
    create: true
    IPadd: ""
    Netmask: "29"
    hostInterface: "ens33"      
  ruInterface:            #Only needed if using a ethernet based RU/USRP
    create: false
    IPadd: "192.168.80.90"
    Netmask: "27"
    # #name inside the pod is hardcoded right now
    # name: "ru"
    # if gatway is commented then it will be remove
    #Gateway: "192.168.80.1"  #In case you don't have a gateway remove it from here
    ## The value must be [0, master's MTU]. If commented it will masters MTU
    #mtu: 9000
    hostInterface: "bond0"      # Interface of the host machine on which this pod will be scheduled

## If you want to change more configuration parameters then you should mount the config file  
# in templates/configmap.yaml
# Example config files --> https://gitlab.eurecom.fr/oai/openairinterface5g/-/tree/develop/targets/PROJECTS/GENERIC-NR-5GC/CONF 
config:
  mountConfig: true         
  timeZone: "Asia/Jakarta"
  useAdditionalOptions: "--sa --rfsim -r 106 --numerology 1 -C 3619200000 --nokrnmod --log_config.global_log_options level,nocolor,time"
  gnbId: ""
  duName: "oai-du-rfsim"
  duId: ""
  cellId: ""
  mcc: ""   
  mnc: ""   
  tac: ""     
  sst: ""  
  usrp:    
  f1IfName: "f1"   
  cuHost: "" 
  f1cuPort: ""   
  f1duPort: ""   

## Debugging section
podSecurityContext:
  runAsUser: 0
  runAsGroup: 0

start:
  gnbdu: true #If false the network function container will run in sleep mode for manually testing
  tcpdump: false

includeTcpDumpContainer: false #If true it will add a tcpdump container inside network function pod for debugging

## For openshift you can use rhel8/support-tools:8.7-13
tcpdumpimage:
   repository: docker.io/corfr/tcpdump
   version: latest
   #pullPolicy: IfNotPresent or Never or Always
   pullPolicy: IfNotPresent

## NF is the network function and tcpdump is the tcpdump container. 
## To know more about request and limit it is better to understand that how Kubernetes QoS works. 
## https://kubernetes.io/docs/concepts/configuration/manage-resources-containers
## https://kubernetes.io/docs/concepts/workloads/pods/pod-qos
resources:
  define: true
  limits:
    nf:
      cpu: 500m
      memory: 800Mi
    #If tcpdump container is disabled this value will not be used
    tcpdump:
      cpu: 200m
      memory: 128Mi
  requests:
    nf:
      cpu: 300m
      memory: 500Mi
    #If tcpdump container is disabled this value will not be used
    tcpdump:
      cpu: 100m
      memory: 128Mi

tolerations: []

affinity: {}

terminationGracePeriodSeconds: 5

nodeSelector: {}

nodeName: node2
